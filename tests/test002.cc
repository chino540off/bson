#include <cassert>
#include <iostream>

#include <bson.hh>

int
main(void)
{
	std::vector<std::uint8_t>	vec = { 0x32, 0x00, 0x00, 0x00, 0x03, 0x61, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x03, 0x62, 0x00, 0x22, 0x00, 0x00, 0x00, 0x04, 0x63, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x10, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x31, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x32, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

	auto						bson = BSON(vec);

	bson.Dump();

	try
	{
		bson[1].is<RootDocument>();
	}
	catch (std::exception & e)
	{
		assert(true);
		assert(bson[0].is<RootDocument>());
	}

	assert(bson[0].has_key("a") == true);
	assert(bson[0].has_key("b") == false);

	assert(bson[0]["a"].is<Document>() == true);

	auto doc = bson[0]["a"].get<Document>();
}
